{
  "address": "0xF3Fd8b4A73587d5247b0C9e49592547842c1bFF1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct PolyNftRegistry.OrderInfo",
          "name": "orderInfoArg",
          "type": "tuple"
        }
      ],
      "name": "deregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct PolyNftRegistry.OrderInfo[]",
          "name": "orderInfosArg",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "tokenURI",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "fuse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orderInfoHashMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "polyNftErc721",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fusionCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "polyNftErc721OrderMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "polyNftErc721",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fusionCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct PolyNftRegistry.OrderInfo",
          "name": "orderInfoArg",
          "type": "tuple"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbfdebaf22326fcb829183159ba53d321594c2de4bc9b81a025d30a751f626903",
  "receipt": {
    "to": null,
    "from": "0xf0d342903C88CFfFf0f4c0934520F1bf86C7b2e6",
    "contractAddress": "0xF3Fd8b4A73587d5247b0C9e49592547842c1bFF1",
    "transactionIndex": 1,
    "gasUsed": "1234042",
    "logsBloom": "0x
    "blockHash": "0x1432738e75f58592b85180904748d1592fc7dfe1dd3139d208c011afbf2a1b7c",
    "transactionHash": "0xbfdebaf22326fcb829183159ba53d321594c2de4bc9b81a025d30a751f626903",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 8056196,
        "transactionHash": "0xbfdebaf22326fcb829183159ba53d321594c2de4bc9b81a025d30a751f626903",
        "address": "0xF3Fd8b4A73587d5247b0C9e49592547842c1bFF1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f0d342903c88cffff0f4c0934520f1bf86c7b2e6"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x1432738e75f58592b85180904748d1592fc7dfe1dd3139d208c011afbf2a1b7c"
      }
    ],
    "blockNumber": 8056196,
    "cumulativeGasUsed": "1280943",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a1f45de17f96e288b26929d9fbfc1f97",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct PolyNftRegistry.OrderInfo\",\"name\":\"orderInfoArg\",\"type\":\"tuple\"}],\"name\":\"deregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct PolyNftRegistry.OrderInfo[]\",\"name\":\"orderInfosArg\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"tokenURI\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"fuse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderInfoHashMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"polyNftErc721OrderMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct PolyNftRegistry.OrderInfo\",\"name\":\"orderInfoArg\",\"type\":\"tuple\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolyNftRegistry.sol\":\"PolyNftRegistry\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Interface/IPolyNftErc721.sol\":{\"content\":\"pragma solidity 0.8.1;\\n\\nimport { IERC721 } from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IPolyNftErc721 is IERC721 {\\n    function mint(\\n        address to,\\n        bytes memory tokenURO,\\n        bytes memory attribute,\\n        string memory description,\\n        uint256[] memory sourceTokenIds\\n    ) external;\\n\\n    function getTokenAttribute(uint256 tokenId) external view returns (bytes memory);\\n\\n    function getFusionImplementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa84c52b01ec5a5d81c5bd420f1449066506705084f095b06b0737d88959b6b61\"},\"contracts/Interface/IPolyNftFusionImp.sol\":{\"content\":\"pragma solidity 0.8.1;\\n\\ninterface IPolyNftFusionImp {\\n    function fuse(bytes[] calldata attributeArray) external returns (bytes memory attribute);\\n}\\n\",\"keccak256\":\"0x46b254b18ef1b9da1773e660d0cf7cd367a97e8588f9cea2a82aad1b9ec3db26\"},\"contracts/PolyNftRegistry.sol\":{\"content\":\"pragma solidity 0.8.1;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IPolyNftErc721, IERC721 } from \\\"./Interface/IPolyNftErc721.sol\\\";\\nimport { IPolyNftFusionImp } from \\\"./Interface/IPolyNftFusionImp.sol\\\";\\n\\ncontract PolyNftRegistry is Ownable {\\n    /// @param fusionCost default in ETH\\n    struct OrderInfo {\\n        address polyNftErc721;\\n        uint256 tokenId;\\n        uint256 fusionCost;\\n        uint256 timestamp;\\n        string description;\\n    }\\n\\n    // fee ratio of platform\\n    uint24 internal constant _FEE_RATIO = 0.01e6; // 1% in decimal 6\\n    uint24 internal constant _MAX_FUSE_AMOUNT = 10; // TODO: need to add set function (onlyOwner)\\n\\n    mapping(address => OrderInfo[]) public polyNftErc721OrderMap;\\n    mapping(address => OrderInfo[]) public orderMap;\\n    mapping(bytes32 => address) public orderInfoHashMap;\\n\\n    function register(OrderInfo calldata orderInfoArg) external {\\n        // PNR_NO: not owner\\n        require(IPolyNftErc721(orderInfoArg.polyNftErc721).ownerOf(orderInfoArg.tokenId) == msg.sender, \\\"PNR_NO\\\");\\n        IPolyNftErc721(orderInfoArg.polyNftErc721).transferFrom(msg.sender, address(this), orderInfoArg.tokenId);\\n        orderMap[msg.sender].push(orderInfoArg);\\n\\n        bytes32 orderInfoHash = keccak256(\\n            abi.encodePacked(orderInfoArg.polyNftErc721, orderInfoArg.tokenId, block.timestamp)\\n        );\\n        orderInfoHashMap[orderInfoHash] = msg.sender;\\n    }\\n\\n    // deregister will implement later\\n    function deregister(OrderInfo calldata orderInfoArg) external {}\\n\\n    // will call fuse() of implementation address\\n    function fuse(\\n        OrderInfo[] calldata orderInfosArg,\\n        bytes calldata tokenURI,\\n        string calldata description\\n    ) external payable {\\n        uint256 orderInfoLength = orderInfosArg.length;\\n\\n        // PNR_TMO: too much orders\\n        require(orderInfoLength <= _MAX_FUSE_AMOUNT, \\\"PNR_TMO\\\");\\n\\n        uint256 totalFusionCost;\\n        bytes[] memory attributes = new bytes[](orderInfoLength);\\n        uint256[] memory sourceTokenIds = new uint256[](orderInfoLength);\\n\\n        for (uint256 i = 0; i < orderInfoLength; ++i) {\\n            totalFusionCost += orderInfosArg[i].fusionCost;\\n            attributes[i] = IPolyNftErc721(orderInfosArg[i].polyNftErc721).getTokenAttribute(orderInfosArg[i].tokenId);\\n            sourceTokenIds[i] = orderInfosArg[i].tokenId;\\n            payable(\\n                orderInfoHashMap[\\n                    keccak256(\\n                        abi.encodePacked(orderInfosArg[i].polyNftErc721, orderInfosArg[i].tokenId, block.timestamp)\\n                    )\\n                ]\\n            ).transfer((orderInfosArg[i].fusionCost * (1e6 - _FEE_RATIO)) / 1e6);\\n\\n            // check all of the polyNftErc721 is the same\\n            if (i > 0) {\\n                // PNR_NS: not the same\\n                require(orderInfosArg[i].polyNftErc721 == orderInfosArg[i - 1].polyNftErc721, \\\"PNR_NS\\\");\\n            }\\n        }\\n\\n        // PNR_NEP: not enoungh fusionCost\\n        require(msg.value >= totalFusionCost, \\\"PNR_NEP\\\");\\n\\n        // call the implemnation address\\n        address polyNftErc721 = orderInfosArg[0].polyNftErc721;\\n        address fusionImp = IPolyNftErc721(polyNftErc721).getFusionImplementation();\\n        bytes memory fusionAttribute;\\n\\n        if (fusionImp != address(0)) {\\n            fusionAttribute = IPolyNftFusionImp(fusionImp).fuse(attributes);\\n        }\\n\\n        // mint fusion NFT\\n        IPolyNftErc721(polyNftErc721).mint(msg.sender, tokenURI, fusionAttribute, description, sourceTokenIds);\\n    }\\n}\\n\",\"keccak256\":\"0xc6978e67f12c0a879d50befd4f29661b50c8fa6ee4d8abc08ff78be96997ae34\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114e8806100896000396000f3fe6080604052600436106100865760003560e01c8063ae2372af11610059578063ae2372af1461011e578063bf1250b314610131578063f138324f14610151578063f2fde38b14610171578063f9e3c8941461019157610086565b80631c63758d1461008b5780632df7fb92146100ad578063715018a6146100e75780638da5cb5b146100fc575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610e56565b6101b1565b005b3480156100b957600080fd5b506100cd6100c8366004610caa565b610372565b6040516100de959493929190610fd9565b60405180910390f35b3480156100f357600080fd5b506100ab610458565b34801561010857600080fd5b5061011161046c565b6040516100de9190610f0e565b6100ab61012c366004610cd5565b61047b565b34801561013d57600080fd5b506100cd61014c366004610caa565b610b20565b34801561015d57600080fd5b5061011161016c366004610d95565b610b3c565b34801561017d57600080fd5b506100ab61018c366004610c6b565b610b57565b34801561019d57600080fd5b506100ab6101ac366004610e56565b610b8e565b336101bf6020830183610c6b565b6001600160a01b0316636352211e83602001356040518263ffffffff1660e01b81526004016101ee9190611169565b60206040518083038186803b15801561020657600080fd5b505afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610c8e565b6001600160a01b03161461026d5760405162461bcd60e51b815260040161026490611149565b60405180910390fd5b61027a6020820182610c6b565b6001600160a01b03166323b872dd333084602001356040518463ffffffff1660e01b81526004016102ad93929190610f22565b600060405180830381600087803b1580156102c757600080fd5b505af11580156102db573d6000803e3d6000fd5b505033600090815260026020908152604082208054600181018255908352912084935060059091020190506103108282611405565b50600090506103226020830183610c6b565b82602001354260405160200161033a93929190610ee4565b60408051601f19818403018152918152815160209283012060009081526003909252902080546001600160a01b031916331790555050565b6002602052816000526040600020818154811061038e57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004850180546001600160a01b039095169750929550909390929091906103d590611370565b80601f016020809104026020016040519081016040528092919081815260200182805461040190611370565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905085565b610460610b91565b61046a6000610bd0565b565b6000546001600160a01b031690565b84600a81111561049d5760405162461bcd60e51b8152600401610264906110d3565b6000808267ffffffffffffffff8111156104c757634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104fa57816020015b60608152602001906001900390816104e55790505b50905060008367ffffffffffffffff81111561052657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561054f578160200160208202803683370190505b50905060005b84811015610936578a8a8281811061057d57634e487b7160e01b600052603260045260246000fd5b905060200281019061058f9190611172565b61059d90604001358561119d565b93508a8a828181106105bf57634e487b7160e01b600052603260045260246000fd5b90506020028101906105d19190611172565b6105df906020810190610c6b565b6001600160a01b0316631f5caafb8c8c8481811061060d57634e487b7160e01b600052603260045260246000fd5b905060200281019061061f9190611172565b602001356040518263ffffffff1660e01b815260040161063f9190611169565b60006040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106939190810190610dad565b8382815181106106b357634e487b7160e01b600052603260045260246000fd5b60200260200101819052508a8a828181106106de57634e487b7160e01b600052603260045260246000fd5b90506020028101906106f09190611172565b6020013582828151811061071457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600360008c8c8481811061074457634e487b7160e01b600052603260045260246000fd5b90506020028101906107569190611172565b610764906020810190610c6b565b8d8d8581811061078457634e487b7160e01b600052603260045260246000fd5b90506020028101906107969190611172565b60200135426040516020016107ad93929190610ee4565b60408051601f19818403018152918152815160209283012083529082019290925201600020546001600160a01b03166108fc620f42406107ef612710826111f4565b62ffffff168e8e8681811061081457634e487b7160e01b600052603260045260246000fd5b90506020028101906108269190611172565b6040013561083491906111d5565b61083e91906111b5565b6040518115909202916000818181858888f19350505050158015610866573d6000803e3d6000fd5b508015610926578a8a61087a600184611218565b81811061089757634e487b7160e01b600052603260045260246000fd5b90506020028101906108a99190611172565b6108b7906020810190610c6b565b6001600160a01b03168b8b838181106108e057634e487b7160e01b600052603260045260246000fd5b90506020028101906108f29190611172565b610900906020810190610c6b565b6001600160a01b0316146109265760405162461bcd60e51b8152600401610264906110f4565b61092f816113be565b9050610555565b50823410156109575760405162461bcd60e51b81526004016102649061106c565b60008a8a600081811061097a57634e487b7160e01b600052603260045260246000fd5b905060200281019061098c9190611172565b61099a906020810190610c6b565b90506000816001600160a01b031663b5a25e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190610c8e565b905060606001600160a01b03821615610aa757604051634604763160e11b81526001600160a01b03831690638c08ec6290610a4e90889060040161100c565b600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa49190810190610dad565b90505b826001600160a01b03166387c84458338d8d858e8e8b6040518863ffffffff1660e01b8152600401610adf9796959493929190610f46565b600060405180830381600087803b158015610af957600080fd5b505af1158015610b0d573d6000803e3d6000fd5b5050505050505050505050505050505050565b6001602052816000526040600020818154811061038e57600080fd5b6003602052600090815260409020546001600160a01b031681565b610b5f610b91565b6001600160a01b038116610b855760405162461bcd60e51b81526004016102649061108d565b610b8e81610bd0565b50565b610b99610c20565b6001600160a01b0316610baa61046c565b6001600160a01b03161461046a5760405162461bcd60e51b815260040161026490611114565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b60008083601f840112610c35578182fd5b50813567ffffffffffffffff811115610c4c578182fd5b602083019150836020828501011115610c6457600080fd5b9250929050565b600060208284031215610c7c578081fd5b8135610c878161149d565b9392505050565b600060208284031215610c9f578081fd5b8151610c878161149d565b60008060408385031215610cbc578081fd5b8235610cc78161149d565b946020939093013593505050565b60008060008060008060608789031215610ced578182fd5b863567ffffffffffffffff80821115610d04578384fd5b818901915089601f830112610d17578384fd5b813581811115610d25578485fd5b8a60208083028501011115610d38578485fd5b602092830198509650908801359080821115610d52578384fd5b610d5e8a838b01610c24565b90965094506040890135915080821115610d76578384fd5b50610d8389828a01610c24565b979a9699509497509295939492505050565b600060208284031215610da6578081fd5b5035919050565b600060208284031215610dbe578081fd5b815167ffffffffffffffff80821115610dd5578283fd5b818401915084601f830112610de8578283fd5b815181811115610dfa57610dfa6113ef565b604051601f8201601f19908116603f01168101908382118183101715610e2257610e226113ef565b81604052828152876020848701011115610e3a578586fd5b610e4b836020830160208801611340565b979650505050505050565b600060208284031215610e67578081fd5b813567ffffffffffffffff811115610e7d578182fd5b820160a08185031215610c87578182fd5b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452610ed0816020860160208601611340565b601f01601f19169290920160200192915050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038816815260a06020808301829052600091610f6c908401898b610e8e565b8381036040850152610f7e8189610eb8565b90508381036060850152610f93818789610e8e565b84810360808601528551808252838701925090830190845b81811015610fc757835183529284019291840191600101610fab565b50909c9b505050505050505050505050565b600060018060a01b038716825285602083015284604083015283606083015260a06080830152610e4b60a0830184610eb8565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561105f57603f1988860301845261104d858351610eb8565b94509285019290850190600101611031565b5092979650505050505050565b6020808252600790820152660504e525f4e45560cc1b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260079082015266504e525f544d4f60c81b604082015260600190565b602080825260069082015265504e525f4e5360d01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260069082015265504e525f4e4f60d01b604082015260600190565b90815260200190565b60008235609e19833603018112611187578182fd5b9190910192915050565b60009081526020902090565b600082198211156111b0576111b06113d9565b500190565b6000826111d057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111ef576111ef6113d9565b500290565b600062ffffff83811690831681811015611210576112106113d9565b039392505050565b60008282101561122a5761122a6113d9565b500390565b5b818110156112445760008155600101611230565b5050565b67ffffffffffffffff831115611260576112606113ef565b61126a8154611370565b600080601f8611601f8411818117156112895761128686611191565b92505b80156112b8576020601f890104830160208910156112a45750825b6112b66020601f88010485018261122f565b505b5080600181146112e4576000945087156112d3578387013594505b6112dd88866113ab565b8655611336565b601f198816945082845b8681101561130e57888601358255602095860195600190920191016112ee565b508886101561132b57878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b8381101561135b578181015183820152602001611343565b8381111561136a576000848401525b50505050565b60028104600182168061138457607f821691505b602082108114156113a557634e487b7160e01b600052602260045260246000fd5b50919050565b600019600883021c191660029091021790565b60006000198214156113d2576113d26113d9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b81356114108161149d565b81546001600160a01b0319166001600160a01b0391909116178155602082013560018201556040820135600282015560608201356003820155608082013536839003601e1901811261146157600080fd5b8201803567ffffffffffffffff81111561147a57600080fd5b60208201915080360382131561148f57600080fd5b61136a818360048601611248565b6001600160a01b0381168114610b8e57600080fdfea264697066735822122044b0572ab287e168b743fb0b6aa6cafd0388d8c0f0d06152c2aebc0eb9cf075664736f6c63430008010033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063ae2372af11610059578063ae2372af1461011e578063bf1250b314610131578063f138324f14610151578063f2fde38b14610171578063f9e3c8941461019157610086565b80631c63758d1461008b5780632df7fb92146100ad578063715018a6146100e75780638da5cb5b146100fc575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610e56565b6101b1565b005b3480156100b957600080fd5b506100cd6100c8366004610caa565b610372565b6040516100de959493929190610fd9565b60405180910390f35b3480156100f357600080fd5b506100ab610458565b34801561010857600080fd5b5061011161046c565b6040516100de9190610f0e565b6100ab61012c366004610cd5565b61047b565b34801561013d57600080fd5b506100cd61014c366004610caa565b610b20565b34801561015d57600080fd5b5061011161016c366004610d95565b610b3c565b34801561017d57600080fd5b506100ab61018c366004610c6b565b610b57565b34801561019d57600080fd5b506100ab6101ac366004610e56565b610b8e565b336101bf6020830183610c6b565b6001600160a01b0316636352211e83602001356040518263ffffffff1660e01b81526004016101ee9190611169565b60206040518083038186803b15801561020657600080fd5b505afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610c8e565b6001600160a01b03161461026d5760405162461bcd60e51b815260040161026490611149565b60405180910390fd5b61027a6020820182610c6b565b6001600160a01b03166323b872dd333084602001356040518463ffffffff1660e01b81526004016102ad93929190610f22565b600060405180830381600087803b1580156102c757600080fd5b505af11580156102db573d6000803e3d6000fd5b505033600090815260026020908152604082208054600181018255908352912084935060059091020190506103108282611405565b50600090506103226020830183610c6b565b82602001354260405160200161033a93929190610ee4565b60408051601f19818403018152918152815160209283012060009081526003909252902080546001600160a01b031916331790555050565b6002602052816000526040600020818154811061038e57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004850180546001600160a01b039095169750929550909390929091906103d590611370565b80601f016020809104026020016040519081016040528092919081815260200182805461040190611370565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905085565b610460610b91565b61046a6000610bd0565b565b6000546001600160a01b031690565b84600a81111561049d5760405162461bcd60e51b8152600401610264906110d3565b6000808267ffffffffffffffff8111156104c757634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104fa57816020015b60608152602001906001900390816104e55790505b50905060008367ffffffffffffffff81111561052657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561054f578160200160208202803683370190505b50905060005b84811015610936578a8a8281811061057d57634e487b7160e01b600052603260045260246000fd5b905060200281019061058f9190611172565b61059d90604001358561119d565b93508a8a828181106105bf57634e487b7160e01b600052603260045260246000fd5b90506020028101906105d19190611172565b6105df906020810190610c6b565b6001600160a01b0316631f5caafb8c8c8481811061060d57634e487b7160e01b600052603260045260246000fd5b905060200281019061061f9190611172565b602001356040518263ffffffff1660e01b815260040161063f9190611169565b60006040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106939190810190610dad565b8382815181106106b357634e487b7160e01b600052603260045260246000fd5b60200260200101819052508a8a828181106106de57634e487b7160e01b600052603260045260246000fd5b90506020028101906106f09190611172565b6020013582828151811061071457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600360008c8c8481811061074457634e487b7160e01b600052603260045260246000fd5b90506020028101906107569190611172565b610764906020810190610c6b565b8d8d8581811061078457634e487b7160e01b600052603260045260246000fd5b90506020028101906107969190611172565b60200135426040516020016107ad93929190610ee4565b60408051601f19818403018152918152815160209283012083529082019290925201600020546001600160a01b03166108fc620f42406107ef612710826111f4565b62ffffff168e8e8681811061081457634e487b7160e01b600052603260045260246000fd5b90506020028101906108269190611172565b6040013561083491906111d5565b61083e91906111b5565b6040518115909202916000818181858888f19350505050158015610866573d6000803e3d6000fd5b508015610926578a8a61087a600184611218565b81811061089757634e487b7160e01b600052603260045260246000fd5b90506020028101906108a99190611172565b6108b7906020810190610c6b565b6001600160a01b03168b8b838181106108e057634e487b7160e01b600052603260045260246000fd5b90506020028101906108f29190611172565b610900906020810190610c6b565b6001600160a01b0316146109265760405162461bcd60e51b8152600401610264906110f4565b61092f816113be565b9050610555565b50823410156109575760405162461bcd60e51b81526004016102649061106c565b60008a8a600081811061097a57634e487b7160e01b600052603260045260246000fd5b905060200281019061098c9190611172565b61099a906020810190610c6b565b90506000816001600160a01b031663b5a25e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190610c8e565b905060606001600160a01b03821615610aa757604051634604763160e11b81526001600160a01b03831690638c08ec6290610a4e90889060040161100c565b600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa49190810190610dad565b90505b826001600160a01b03166387c84458338d8d858e8e8b6040518863ffffffff1660e01b8152600401610adf9796959493929190610f46565b600060405180830381600087803b158015610af957600080fd5b505af1158015610b0d573d6000803e3d6000fd5b5050505050505050505050505050505050565b6001602052816000526040600020818154811061038e57600080fd5b6003602052600090815260409020546001600160a01b031681565b610b5f610b91565b6001600160a01b038116610b855760405162461bcd60e51b81526004016102649061108d565b610b8e81610bd0565b50565b610b99610c20565b6001600160a01b0316610baa61046c565b6001600160a01b03161461046a5760405162461bcd60e51b815260040161026490611114565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b60008083601f840112610c35578182fd5b50813567ffffffffffffffff811115610c4c578182fd5b602083019150836020828501011115610c6457600080fd5b9250929050565b600060208284031215610c7c578081fd5b8135610c878161149d565b9392505050565b600060208284031215610c9f578081fd5b8151610c878161149d565b60008060408385031215610cbc578081fd5b8235610cc78161149d565b946020939093013593505050565b60008060008060008060608789031215610ced578182fd5b863567ffffffffffffffff80821115610d04578384fd5b818901915089601f830112610d17578384fd5b813581811115610d25578485fd5b8a60208083028501011115610d38578485fd5b602092830198509650908801359080821115610d52578384fd5b610d5e8a838b01610c24565b90965094506040890135915080821115610d76578384fd5b50610d8389828a01610c24565b979a9699509497509295939492505050565b600060208284031215610da6578081fd5b5035919050565b600060208284031215610dbe578081fd5b815167ffffffffffffffff80821115610dd5578283fd5b818401915084601f830112610de8578283fd5b815181811115610dfa57610dfa6113ef565b604051601f8201601f19908116603f01168101908382118183101715610e2257610e226113ef565b81604052828152876020848701011115610e3a578586fd5b610e4b836020830160208801611340565b979650505050505050565b600060208284031215610e67578081fd5b813567ffffffffffffffff811115610e7d578182fd5b820160a08185031215610c87578182fd5b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452610ed0816020860160208601611340565b601f01601f19169290920160200192915050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038816815260a06020808301829052600091610f6c908401898b610e8e565b8381036040850152610f7e8189610eb8565b90508381036060850152610f93818789610e8e565b84810360808601528551808252838701925090830190845b81811015610fc757835183529284019291840191600101610fab565b50909c9b505050505050505050505050565b600060018060a01b038716825285602083015284604083015283606083015260a06080830152610e4b60a0830184610eb8565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561105f57603f1988860301845261104d858351610eb8565b94509285019290850190600101611031565b5092979650505050505050565b6020808252600790820152660504e525f4e45560cc1b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260079082015266504e525f544d4f60c81b604082015260600190565b602080825260069082015265504e525f4e5360d01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260069082015265504e525f4e4f60d01b604082015260600190565b90815260200190565b60008235609e19833603018112611187578182fd5b9190910192915050565b60009081526020902090565b600082198211156111b0576111b06113d9565b500190565b6000826111d057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111ef576111ef6113d9565b500290565b600062ffffff83811690831681811015611210576112106113d9565b039392505050565b60008282101561122a5761122a6113d9565b500390565b5b818110156112445760008155600101611230565b5050565b67ffffffffffffffff831115611260576112606113ef565b61126a8154611370565b600080601f8611601f8411818117156112895761128686611191565b92505b80156112b8576020601f890104830160208910156112a45750825b6112b66020601f88010485018261122f565b505b5080600181146112e4576000945087156112d3578387013594505b6112dd88866113ab565b8655611336565b601f198816945082845b8681101561130e57888601358255602095860195600190920191016112ee565b508886101561132b57878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b8381101561135b578181015183820152602001611343565b8381111561136a576000848401525b50505050565b60028104600182168061138457607f821691505b602082108114156113a557634e487b7160e01b600052602260045260246000fd5b50919050565b600019600883021c191660029091021790565b60006000198214156113d2576113d26113d9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b81356114108161149d565b81546001600160a01b0319166001600160a01b0391909116178155602082013560018201556040820135600282015560608201356003820155608082013536839003601e1901811261146157600080fd5b8201803567ffffffffffffffff81111561147a57600080fd5b60208201915080360382131561148f57600080fd5b61136a818360048601611248565b6001600160a01b0381168114610b8e57600080fdfea264697066735822122044b0572ab287e168b743fb0b6aa6cafd0388d8c0f0d06152c2aebc0eb9cf075664736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 340,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "polyNftErc721OrderMap",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_struct(OrderInfo)328_storage)dyn_storage)"
      },
      {
        "astId": 346,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "orderMap",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(OrderInfo)328_storage)dyn_storage)"
      },
      {
        "astId": 350,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "orderInfoHashMap",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(OrderInfo)328_storage)dyn_storage": {
        "base": "t_struct(OrderInfo)328_storage",
        "encoding": "dynamic_array",
        "label": "struct PolyNftRegistry.OrderInfo[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(OrderInfo)328_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PolyNftRegistry.OrderInfo[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OrderInfo)328_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(OrderInfo)328_storage": {
        "encoding": "inplace",
        "label": "struct PolyNftRegistry.OrderInfo",
        "members": [
          {
            "astId": 319,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "polyNftErc721",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 321,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "tokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 323,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "fusionCost",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 325,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 327,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}