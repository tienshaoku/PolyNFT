{
  "address": "0x62ff6b3C0179A84BA63191Be9c11fabaa6345A44",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_RATIO",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FUSION_AMOUNT",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct PolyNftRegistry.DeRegisterInputParam",
          "name": "deRegisterInputArg",
          "type": "tuple"
        }
      ],
      "name": "deregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct PolyNftRegistry.OrderInfo[]",
          "name": "orderInfosArg",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "fuse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownerArg",
          "type": "address"
        }
      ],
      "name": "getOrdersByOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct PolyNftRegistry.OrderInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc721",
          "type": "address"
        }
      ],
      "name": "getOrdersInfoByPolyNftErc721",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "attribute",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256[]",
              "name": "fusionSourceTokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PolyNftRegistry.GetOrderInfoReturnParam[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderMapByOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "polyNftErc721",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fusionCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderMapByPolyNftErc721",
      "outputs": [
        {
          "internalType": "address",
          "name": "polyNftErc721",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fusionCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "ownerMapByOrderHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "polyNftErc721",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fusionCost",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct PolyNftRegistry.RegisterInputParam",
          "name": "registerInputArg",
          "type": "tuple"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1f6989240990f2bd245816d5975dff016ced871eace80a44d58cac511d103979",
  "receipt": {
    "to": null,
    "from": "0xf0d342903C88CFfFf0f4c0934520F1bf86C7b2e6",
    "contractAddress": "0x62ff6b3C0179A84BA63191Be9c11fabaa6345A44",
    "transactionIndex": 2,
    "gasUsed": "1758119",
    "logsBloom": "0x
    "blockHash": "0x357a6674e712021b9b2f0e9c315bda7da75d38095b052d18a5fc6954f81705f9",
    "transactionHash": "0x1f6989240990f2bd245816d5975dff016ced871eace80a44d58cac511d103979",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 8079642,
        "transactionHash": "0x1f6989240990f2bd245816d5975dff016ced871eace80a44d58cac511d103979",
        "address": "0x62ff6b3C0179A84BA63191Be9c11fabaa6345A44",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f0d342903c88cffff0f4c0934520f1bf86c7b2e6"
        ],
        "data": "0x",
        "logIndex": 8,
        "blockHash": "0x357a6674e712021b9b2f0e9c315bda7da75d38095b052d18a5fc6954f81705f9"
      }
    ],
    "blockNumber": 8079642,
    "cumulativeGasUsed": "2911985",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "59830ec8888452e0746c500c65cf33c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_RATIO\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUSION_AMOUNT\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct PolyNftRegistry.DeRegisterInputParam\",\"name\":\"deRegisterInputArg\",\"type\":\"tuple\"}],\"name\":\"deregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct PolyNftRegistry.OrderInfo[]\",\"name\":\"orderInfosArg\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"fuse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerArg\",\"type\":\"address\"}],\"name\":\"getOrdersByOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct PolyNftRegistry.OrderInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc721\",\"type\":\"address\"}],\"name\":\"getOrdersInfoByPolyNftErc721\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"attribute\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"fusionSourceTokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct PolyNftRegistry.GetOrderInfoReturnParam[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderMapByOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderMapByPolyNftErc721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ownerMapByOrderHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"polyNftErc721\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fusionCost\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct PolyNftRegistry.RegisterInputParam\",\"name\":\"registerInputArg\",\"type\":\"tuple\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolyNftRegistry.sol\":\"PolyNftRegistry\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Interface/IPolyNftErc721.sol\":{\"content\":\"pragma solidity 0.8.1;\\n\\nimport { IERC721 } from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IPolyNftErc721 is IERC721 {\\n    struct TokenInfo {\\n        uint256 tokenId;\\n        string tokenURI;\\n        bytes attribute;\\n        string description;\\n        uint256[] fusionSourceTokenIds;\\n    }\\n\\n    function mint(\\n        address to,\\n        string memory tokenURI,\\n        bytes memory attribute,\\n        string memory description,\\n        uint256[] memory fusionSourceTokenIds\\n    ) external;\\n\\n    function getTokenAttribute(uint256 tokenId) external view returns (bytes memory);\\n\\n    function getFusionImplementation() external view returns (address);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n    function getFusionSourceTokenIds(uint256 tokenId) external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x8ae5722c64ad9a96a731e7dde855213238b047c4a12dc2648f295dd9fe586d14\"},\"contracts/Interface/IPolyNftFusionImp.sol\":{\"content\":\"pragma solidity 0.8.1;\\n\\ninterface IPolyNftFusionImp {\\n    function fuse(bytes[] calldata attributeArray) external returns (bytes memory attribute);\\n}\\n\",\"keccak256\":\"0x46b254b18ef1b9da1773e660d0cf7cd367a97e8588f9cea2a82aad1b9ec3db26\"},\"contracts/PolyNftRegistry.sol\":{\"content\":\"pragma solidity 0.8.1;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IPolyNftErc721, IERC721 } from \\\"./Interface/IPolyNftErc721.sol\\\";\\nimport { IPolyNftFusionImp } from \\\"./Interface/IPolyNftFusionImp.sol\\\";\\n\\ncontract PolyNftRegistry is Ownable {\\n    // TODO: need to seperate input and output struct, input doesn't need to include timestamp\\n    // TODO: need to remove description from OrderIngo\\n    // TODO: need to seperate register and fuse input param strauct\\n    /// @param fusionCost default in ETH\\n    // need timestamp to avoit same order but different time list\\n    struct OrderInfo {\\n        address polyNftErc721;\\n        uint256 tokenId;\\n        uint256 fusionCost;\\n        uint256 timestamp;\\n        string description;\\n    }\\n\\n    struct RegisterInputParam {\\n        address polyNftErc721;\\n        uint256 tokenId;\\n        uint256 fusionCost;\\n        string description;\\n    }\\n\\n    struct DeRegisterInputParam {\\n        address polyNftErc721;\\n        uint256 tokenId;\\n    }\\n\\n    // include IokenInfo of ERC721 contract\\n    struct GetOrderInfoReturnParam {\\n        uint256 tokenId;\\n        string tokenURI;\\n        bytes attribute;\\n        string description;\\n        uint256[] fusionSourceTokenIds;\\n        address polyNftErc721;\\n        uint256 fusionCost;\\n        uint256 timestamp;\\n    }\\n\\n    // fee ratio of platform\\n    uint24 public constant FEE_RATIO = 0.01e6; // 1% in decimal 6\\n    uint24 public constant MAX_FUSION_AMOUNT = 10; // TODO: need to add set function (onlyOwner)\\n\\n    // 721 -> token order\\n    mapping(address => OrderInfo[]) public orderMapByPolyNftErc721;\\n    // owner -> token order\\n    mapping(address => OrderInfo[]) public orderMapByOwner;\\n    // token order hash -> owner\\n    mapping(bytes32 => address) public ownerMapByOrderHash;\\n\\n    function register(RegisterInputParam calldata registerInputArg) external {\\n        // PNR_NO: not owner\\n        require(\\n            IPolyNftErc721(registerInputArg.polyNftErc721).ownerOf(registerInputArg.tokenId) == msg.sender,\\n            \\\"PNR_NO\\\"\\n        );\\n\\n        OrderInfo memory orderInfo = OrderInfo(\\n            registerInputArg.polyNftErc721,\\n            registerInputArg.tokenId,\\n            registerInputArg.fusionCost,\\n            block.timestamp,\\n            registerInputArg.description\\n        );\\n\\n        IPolyNftErc721(orderInfo.polyNftErc721).transferFrom(msg.sender, address(this), orderInfo.tokenId);\\n        orderMapByOwner[msg.sender].push(orderInfo);\\n        orderMapByPolyNftErc721[orderInfo.polyNftErc721].push(orderInfo);\\n\\n        bytes32 orderInfoHash = keccak256(\\n            abi.encodePacked(orderInfo.polyNftErc721, orderInfo.tokenId, orderInfo.timestamp)\\n        );\\n        ownerMapByOrderHash[orderInfoHash] = msg.sender;\\n    }\\n\\n    // deregister will implement later\\n    function deregister(DeRegisterInputParam calldata deRegisterInputArg) external {}\\n\\n    // will call fuse() of implementation address\\n    function fuse(\\n        OrderInfo[] calldata orderInfosArg,\\n        string calldata tokenURI,\\n        string calldata description\\n    ) external payable {\\n        uint256 orderInfoLength = orderInfosArg.length;\\n\\n        // PNR_TMO: too much orders\\n        require(orderInfoLength <= MAX_FUSION_AMOUNT, \\\"PNR_TMO\\\");\\n\\n        uint256 totalFusionCost;\\n        bytes[] memory attributes = new bytes[](orderInfoLength);\\n        uint256[] memory sourceTokenIds = new uint256[](orderInfoLength);\\n\\n        for (uint256 i = 0; i < orderInfoLength; ++i) {\\n            totalFusionCost += orderInfosArg[i].fusionCost;\\n            attributes[i] = IPolyNftErc721(orderInfosArg[i].polyNftErc721).getTokenAttribute(orderInfosArg[i].tokenId);\\n            sourceTokenIds[i] = orderInfosArg[i].tokenId;\\n\\n            payable(\\n                ownerMapByOrderHash[\\n                    keccak256(\\n                        abi.encodePacked(\\n                            orderInfosArg[i].polyNftErc721,\\n                            orderInfosArg[i].tokenId,\\n                            orderInfosArg[i].timestamp\\n                        )\\n                    )\\n                ]\\n            ).transfer((orderInfosArg[i].fusionCost * (1e6 - FEE_RATIO)) / 1e6);\\n\\n            // check all of the polyNftErc721 is the same\\n            if (i > 0) {\\n                // PNR_NS: not the same\\n                require(orderInfosArg[i].polyNftErc721 == orderInfosArg[i - 1].polyNftErc721, \\\"PNR_NS\\\");\\n            }\\n        }\\n\\n        // PNR_NEP: not enoungh fusionCost\\n        require(msg.value >= totalFusionCost, \\\"PNR_NEP\\\");\\n\\n        // call the implemnation address\\n        address polyNftErc721 = orderInfosArg[0].polyNftErc721;\\n        address fusionImp = IPolyNftErc721(polyNftErc721).getFusionImplementation();\\n        bytes memory fusionAttribute;\\n\\n        if (fusionImp != address(0)) {\\n            fusionAttribute = IPolyNftFusionImp(fusionImp).fuse(attributes);\\n        }\\n\\n        // mint fusion NFT\\n        IPolyNftErc721(polyNftErc721).mint(msg.sender, tokenURI, fusionAttribute, description, sourceTokenIds);\\n    }\\n\\n    // this function is for FE, not suggest to use in contract interaction\\n    function getOrdersInfoByPolyNftErc721(address erc721) external view returns (GetOrderInfoReturnParam[] memory) {\\n        // return already listed orders info\\n        uint256 orderInfoLength = orderMapByPolyNftErc721[erc721].length;\\n        GetOrderInfoReturnParam[] memory orderInfos = new GetOrderInfoReturnParam[](orderInfoLength);\\n\\n        for (uint256 i = 0; i < orderInfoLength; ++i) {\\n            OrderInfo memory orderInfo = orderMapByPolyNftErc721[erc721][i];\\n            orderInfos[i] = GetOrderInfoReturnParam(\\n                orderInfo.tokenId,\\n                IPolyNftErc721(orderInfo.polyNftErc721).tokenURI(orderInfo.tokenId),\\n                IPolyNftErc721(orderInfo.polyNftErc721).getTokenAttribute(orderInfo.tokenId),\\n                orderInfo.description,\\n                IPolyNftErc721(orderInfo.polyNftErc721).getFusionSourceTokenIds(orderInfo.tokenId),\\n                orderInfo.polyNftErc721,\\n                orderInfo.fusionCost,\\n                orderInfo.timestamp\\n            );\\n        }\\n\\n        return orderInfos;\\n    }\\n\\n    function getOrdersByOwner(address ownerArg) external view returns (OrderInfo[] memory) {\\n        return orderMapByOwner[ownerArg];\\n    }\\n}\\n\",\"keccak256\":\"0x3eab91fc11ebc2c6807504052b0c172893815e52bde98588b055982061d74eca\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611e63806100896000396000f3fe6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063f2fde38b11610059578063f2fde38b146101fc578063f6f109261461021c578063f99ddd731461023c578063fa447f6214610269576100c2565b80638da5cb5b14610198578063b83282da146101ad578063c3eccfe4146101cf576100c2565b806318b0b570146100c75780631a72d19b146100dc5780631fd5f06e14610116578063552e7a5d146101435780635d3a556214610163578063715018a614610183575b600080fd5b6100da6100d5366004611590565b61027e565b005b3480156100e857600080fd5b506100fc6100f7366004611565565b610961565b60405161010d959493929190611919565b60405180910390f35b34801561012257600080fd5b506101366101313660046116f7565b610a47565b60405161010d9190611873565b34801561014f57600080fd5b506100da61015e366004611774565b610a62565b34801561016f57600080fd5b506100fc61017e366004611565565b610d69565b34801561018f57600080fd5b506100da610d85565b3480156101a457600080fd5b50610136610d99565b3480156101b957600080fd5b506101c2610da8565b60405161010d9190611c2c565b3480156101db57600080fd5b506101ef6101ea36600461152d565b610dae565b60405161010d91906119b7565b34801561020857600080fd5b506100da61021736600461152d565b61119b565b34801561022857600080fd5b506100da61023736600461175d565b6111d2565b34801561024857600080fd5b5061025c61025736600461152d565b6111d5565b60405161010d9190611aa2565b34801561027557600080fd5b506101c2611311565b84600a8111156102a95760405162461bcd60e51b81526004016102a090611b96565b60405180910390fd5b6000808267ffffffffffffffff8111156102d357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561030657816020015b60608152602001906001900390816102f15790505b50905060008367ffffffffffffffff81111561033257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561035b578160200160208202803683370190505b50905060005b84811015610777578a8a8281811061038957634e487b7160e01b600052603260045260246000fd5b905060200281019061039b9190611c8a565b6103a9906040013585611cda565b93508a8a828181106103cb57634e487b7160e01b600052603260045260246000fd5b90506020028101906103dd9190611c8a565b6103eb90602081019061152d565b6001600160a01b0316631f5caafb8c8c8481811061041957634e487b7160e01b600052603260045260246000fd5b905060200281019061042b9190611c8a565b602001356040518263ffffffff1660e01b815260040161044b9190611c3c565b60006040518083038186803b15801561046357600080fd5b505afa158015610477573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261049f919081019061170f565b8382815181106104bf57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508a8a828181106104ea57634e487b7160e01b600052603260045260246000fd5b90506020028101906104fc9190611c8a565b6020013582828151811061052057634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600360008c8c8481811061055057634e487b7160e01b600052603260045260246000fd5b90506020028101906105629190611c8a565b61057090602081019061152d565b8d8d8581811061059057634e487b7160e01b600052603260045260246000fd5b90506020028101906105a29190611c8a565b602001358e8e868181106105c657634e487b7160e01b600052603260045260246000fd5b90506020028101906105d89190611c8a565b606001356040516020016105ee93929190611849565b60408051601f19818403018152918152815160209283012083529082019290925201600020546001600160a01b03166108fc620f424061063061271082611d31565b62ffffff168e8e8681811061065557634e487b7160e01b600052603260045260246000fd5b90506020028101906106679190611c8a565b604001356106759190611d12565b61067f9190611cf2565b6040518115909202916000818181858888f193505050501580156106a7573d6000803e3d6000fd5b508015610767578a8a6106bb600184611d55565b8181106106d857634e487b7160e01b600052603260045260246000fd5b90506020028101906106ea9190611c8a565b6106f890602081019061152d565b6001600160a01b03168b8b8381811061072157634e487b7160e01b600052603260045260246000fd5b90506020028101906107339190611c8a565b61074190602081019061152d565b6001600160a01b0316146107675760405162461bcd60e51b81526004016102a090611bb7565b61077081611dd1565b9050610361565b50823410156107985760405162461bcd60e51b81526004016102a090611b2f565b60008a8a60008181106107bb57634e487b7160e01b600052603260045260246000fd5b90506020028101906107cd9190611c8a565b6107db90602081019061152d565b90506000816001600160a01b031663b5a25e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561081857600080fd5b505afa15801561082c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108509190611549565b905060606001600160a01b038216156108e857604051634604763160e11b81526001600160a01b03831690638c08ec629061088f908890600401611957565b600060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108e5919081019061170f565b90505b826001600160a01b0316631e9f4c09338d8d858e8e8b6040518863ffffffff1660e01b815260040161092097969594939291906118ab565b600060405180830381600087803b15801561093a57600080fd5b505af115801561094e573d6000803e3d6000fd5b5050505050505050505050505050505050565b6002602052816000526040600020818154811061097d57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004850180546001600160a01b039095169750929550909390929091906109c490611d9c565b80601f01602080910402602001604051908101604052809291908181526020018280546109f090611d9c565b8015610a3d5780601f10610a1257610100808354040283529160200191610a3d565b820191906000526020600020905b815481529060010190602001808311610a2057829003601f168201915b5050505050905085565b6003602052600090815260409020546001600160a01b031681565b33610a70602083018361152d565b6001600160a01b0316636352211e83602001356040518263ffffffff1660e01b8152600401610a9f9190611c3c565b60206040518083038186803b158015610ab757600080fd5b505afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef9190611549565b6001600160a01b031614610b155760405162461bcd60e51b81526004016102a090611c0c565b6040805160a0810190915260009080610b31602085018561152d565b6001600160a01b031681526020018360200135815260200183604001358152602001428152602001838060600190610b699190611c45565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250805160208201516040516323b872dd60e01b81529293506001600160a01b03909116916323b872dd91610bd89133913091600401611887565b600060405180830381600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b505033600090815260026020818152604080842080546001808201835591865294839020885160059096020180546001600160a01b0319166001600160a01b039096169590951785558783015190850155860151918301919091556060850151600383015560808501518051869550929350610c8b92600485019291909101906113a9565b505081516001600160a01b0390811660009081526001602081815260408084208054808501825590855293829020875160059095020180546001600160a01b0319169490951693909317845580860151918401919091559084015160028301556060840151600383015560808401518051859450610d0f92600485019201906113a9565b50508151602080840151606085015160405160009550610d30949301611849565b60408051601f19818403018152918152815160209283012060009081526003909252902080546001600160a01b03191633179055505050565b6001602052816000526040600020818154811061097d57600080fd5b610d8d611316565b610d976000611355565b565b6000546001600160a01b031690565b61271081565b6001600160a01b0381166000908152600160205260408120546060918167ffffffffffffffff811115610df157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610e2a57816020015b610e1761142d565b815260200190600190039081610e0f5790505b50905060005b82811015611193576001600160a01b0385166000908152600160205260408120805483908110610e7057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820154815260200160038201548152602001600482018054610ee690611d9c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1290611d9c565b8015610f5f5780601f10610f3457610100808354040283529160200191610f5f565b820191906000526020600020905b815481529060010190602001808311610f4257829003601f168201915b50505050508152505090506040518061010001604052808260200151815260200182600001516001600160a01b031663c87b56dd84602001516040518263ffffffff1660e01b8152600401610fb49190611c3c565b60006040518083038186803b158015610fcc57600080fd5b505afa158015610fe0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611008919081019061170f565b815260200182600001516001600160a01b0316631f5caafb84602001516040518263ffffffff1660e01b81526004016110419190611c3c565b60006040518083038186803b15801561105957600080fd5b505afa15801561106d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611095919081019061170f565b81526020018260800151815260200182600001516001600160a01b03166369d3921984602001516040518263ffffffff1660e01b81526004016110d89190611c3c565b60006040518083038186803b1580156110f057600080fd5b505afa158015611104573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261112c9190810190611650565b815260200182600001516001600160a01b0316815260200182604001518152602001826060015181525083838151811061117657634e487b7160e01b600052603260045260246000fd5b6020026020010181905250508061118c90611dd1565b9050610e30565b509392505050565b6111a3611316565b6001600160a01b0381166111c95760405162461bcd60e51b81526004016102a090611b50565b6111d281611355565b50565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156113065760008481526020908190206040805160a0810182526005860290920180546001600160a01b031683526001810154938301939093526002830154908201526003820154606082015260048201805491929160808401919061127590611d9c565b80601f01602080910402602001604051908101604052809291908181526020018280546112a190611d9c565b80156112ee5780601f106112c3576101008083540402835291602001916112ee565b820191906000526020600020905b8154815290600101906020018083116112d157829003601f168201915b5050505050815250508152602001906001019061120d565b505050509050919050565b600a81565b61131e6113a5565b6001600160a01b031661132f610d99565b6001600160a01b031614610d975760405162461bcd60e51b81526004016102a090611bd7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b8280546113b590611d9c565b90600052602060002090601f0160209004810192826113d7576000855561141d565b82601f106113f057805160ff191683800117855561141d565b8280016001018555821561141d579182015b8281111561141d578251825591602001919060010190611402565b5061142992915061147b565b5090565b604051806101000160405280600081526020016060815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160008152602001600081525090565b5b80821115611429576000815560010161147c565b600067ffffffffffffffff8311156114aa576114aa611e02565b6114bd601f8401601f1916602001611ca9565b90508281528383830111156114d157600080fd5b6114df836020830184611d6c565b9392505050565b60008083601f8401126114f7578182fd5b50813567ffffffffffffffff81111561150e578182fd5b60208301915083602082850101111561152657600080fd5b9250929050565b60006020828403121561153e578081fd5b81356114df81611e18565b60006020828403121561155a578081fd5b81516114df81611e18565b60008060408385031215611577578081fd5b823561158281611e18565b946020939093013593505050565b600080600080600080606087890312156115a8578182fd5b863567ffffffffffffffff808211156115bf578384fd5b818901915089601f8301126115d2578384fd5b8135818111156115e0578485fd5b8a602080830285010111156115f3578485fd5b60209283019850965090880135908082111561160d578384fd5b6116198a838b016114e6565b90965094506040890135915080821115611631578384fd5b5061163e89828a016114e6565b979a9699509497509295939492505050565b60006020808385031215611662578182fd5b825167ffffffffffffffff80821115611679578384fd5b818501915085601f83011261168c578384fd5b81518181111561169e5761169e611e02565b83810291506116ae848301611ca9565b8181528481019084860184860187018a10156116c8578788fd5b8795505b838610156116ea5780518352600195909501949186019186016116cc565b5098975050505050505050565b600060208284031215611708578081fd5b5035919050565b600060208284031215611720578081fd5b815167ffffffffffffffff811115611736578182fd5b8201601f81018413611746578182fd5b61175584825160208401611490565b949350505050565b60006040828403121561176e578081fd5b50919050565b600060208284031215611785578081fd5b813567ffffffffffffffff81111561179b578182fd5b8201608081850312156114df578182fd5b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156117e8578151875295820195908201906001016117cc565b509495945050505050565b6000815180845261180b816020860160208601611d6c565b601f01601f19169290920160200192915050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038816815260a0602082018190526000906118d0908301888a61181f565b82810360408401526118e281886117f3565b905082810360608401526118f781868861181f565b9050828103608084015261190b81856117b9565b9a9950505050505050505050565b600060018060a01b038716825285602083015284604083015283606083015260a0608083015261194c60a08301846117f3565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156119aa57603f198886030184526119988583516117f3565b9450928501929085019060010161197c565b5092979650505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015611a9457603f1989840301855281516101008151855288820151818a870152611a0a828701826117f3565b9150508782015185820389870152611a2282826117f3565b91505060608083015186830382880152611a3c83826117f3565b9250505060808083015186830382880152611a5783826117b9565b9250505060a080830151611a6d828801826117ac565b505060c0828101519086015260e091820151919094015293860193908601906001016119db565b509098975050505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015611a9457888303603f19018552815180516001600160a01b03168452878101518885015286810151878501526060808201519085015260809081015160a091850182905290611b1b818601836117f3565b968901969450505090860190600101611ac6565b6020808252600790820152660504e525f4e45560cc1b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260079082015266504e525f544d4f60c81b604082015260600190565b602080825260069082015265504e525f4e5360d01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260069082015265504e525f4e4f60d01b604082015260600190565b62ffffff91909116815260200190565b90815260200190565b6000808335601e19843603018112611c5b578283fd5b83018035915067ffffffffffffffff821115611c75578283fd5b60200191503681900382131561152657600080fd5b60008235609e19833603018112611c9f578182fd5b9190910192915050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611cd257611cd2611e02565b604052919050565b60008219821115611ced57611ced611dec565b500190565b600082611d0d57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611d2c57611d2c611dec565b500290565b600062ffffff83811690831681811015611d4d57611d4d611dec565b039392505050565b600082821015611d6757611d67611dec565b500390565b60005b83811015611d87578181015183820152602001611d6f565b83811115611d96576000848401525b50505050565b600281046001821680611db057607f821691505b6020821081141561176e57634e487b7160e01b600052602260045260246000fd5b6000600019821415611de557611de5611dec565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146111d257600080fdfea26469706673582212203138d6a304577b14383bb4fb6a53c7825a93747235fafb65b46209ac019609cb64736f6c63430008010033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 404,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "orderMapByPolyNftErc721",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_struct(OrderInfo)360_storage)dyn_storage)"
      },
      {
        "astId": 410,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "orderMapByOwner",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(OrderInfo)360_storage)dyn_storage)"
      },
      {
        "astId": 414,
        "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
        "label": "ownerMapByOrderHash",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(OrderInfo)360_storage)dyn_storage": {
        "base": "t_struct(OrderInfo)360_storage",
        "encoding": "dynamic_array",
        "label": "struct PolyNftRegistry.OrderInfo[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(OrderInfo)360_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PolyNftRegistry.OrderInfo[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OrderInfo)360_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(OrderInfo)360_storage": {
        "encoding": "inplace",
        "label": "struct PolyNftRegistry.OrderInfo",
        "members": [
          {
            "astId": 351,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "polyNftErc721",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 353,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "tokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 355,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "fusionCost",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 357,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 359,
            "contract": "contracts/PolyNftRegistry.sol:PolyNftRegistry",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}